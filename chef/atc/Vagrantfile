# -*- mode: ruby -*-
# vi: set ft=ruby :
boxes = [
    {
        :name => :precise,
        :box    => 'precise64',
        :box_url => 'http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-12.04_chef-provisionerless.box',
        :chef_version => :latest,
    },
    {
        :name => :centos65,
        :box    => 'centos65',
        :box_url => 'http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_centos-6.5_chef-provisionerless.box',
        :chef_version => :latest,
    },
    {
        :name => :trusty,
        :box    => 'trusty64',
        :box_url => 'http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-14.04_chef-provisionerless.box',
        :chef_version => :latest,
    }
]
# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    boxes.each do |opts|
        config.vm.define opts[:name] do |box|
            box.vm.box = opts[:box]
            box.vm.box_url = opts.fetch(:box_url) if opts.key?(:box_url)
            box.vm.synced_folder '../../atc', '/usr/local/src/atc/atc'
            # Chef install
            box.omnibus.chef_version = opts.fetch(:chef_version, :latest)
            # hostname
            box.vm.hostname = opts[:name].to_s
            # Berks
            box.berkshelf.enabled = true
            box.vm.provision :chef_solo do |chef|
                chef.run_list = [
                    "recipe[python]",
                    "recipe[atc::default]"
                ]
                if box.vm.box == 'centos65'
                    chef.json = {
                        "python" => {
                          "install_method" => "source",
                          "distribute_install_py_version" => "2.7",
                        }
                    }
                end
            end
            # port forwarding
            box.vm.network :forwarded_port, guest: 8000, host: 8080, auto_correct: true
            # extra interface
            box.vm.network :private_network, ip: opts.fetch(:priv_network, '100.64.33.3')
            box.vm.provider "virtualbox" do |v|
                v.customize ["modifyvm", :id, "--usbehci", opts.fetch(:usbehci, "on")]
            end
        end
    end
end
